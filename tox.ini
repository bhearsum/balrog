[tox]
envlist = py27-docker,py37-docker

[testenv:py27-docker]
whitelist_externals=echo
                    docker
install_command=echo {packages}
ignore_errors=False
deps=
commands=
    docker build -t balrogtest -f Dockerfile.dev .
    docker run --rm -v tox-py27:/app/.tox --entrypoint /usr/local/bin/tox balrogtest -e py27

[testenv:py37-docker]
whitelist_externals=echo
                    docker
install_command=echo {packages}
ignore_errors=False
deps=
commands=
    docker build -t balrogtest-py3 -f Dockerfile.py3.dev .
    docker run --rm -v tox-py37:/app/.tox --entrypoint /usr/local/bin/tox balrogtest-py3 -e py37

[testenv]
# ignore_errors makes sure all commands get run, which means this won't abort if flake8 fails.
# it doesn't affect the return code in the end.
ignore_errors=True
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps = -rrequirements-test.txt
commands=
    flake8 api-tests auslib *.py scripts uwsgi
    py37: py.test -n auto --no-cov {posargs:auslib}
    py27: py.test -n auto --cov --doctest-modules {posargs:auslib}
    py27: coverage run -a scripts/test-rules.py

[flake8]
max-line-length = 160
exclude = .ropeproject,.tox,sandbox,build
show-source = True
# Black formats some of our code in a way that causes E203. Meh.
# W503 is a default ignore, but gets overridden when we set this, so we need
# to add it again ourselves.
ignore = E203,W503

[pytest]
norecursedirs = .tox .git .hg sandbox build
python_files = test_*.py
filterwarnings =
    ignore
    error:::auslib
    ignore::ImportWarning:auslib.db
    default::DeprecationWarning:auslib
    default::PendingDeprecationWarning:auslib
