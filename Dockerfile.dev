# NOTE: The only supported way to use the Balrog dev image is with a volume mount of /app.
# Because of this, the only things we do in the Dockerfile are install things to
# system locations (some system packages and some python packages).
# Things that are fully local to /app (such as npm requirements and the built UI)
# are done as needed in the entrypoint.
FROM python:2.7-slim

MAINTAINER bhearsum@mozilla.com

# Some versions of the python:2.7 Docker image remove libpcre3, which uwsgi needs for routing support to be enabled.
# Node and npm are to build the frontend. nodejs-legacy is needed by this version of npm.
# mysql-client is needed to import sample data
# libmysqlclient-dev is required to use SQLAlchemy with MySQL, which we do in production.
# libfontconfig1 is required by phantomjs
RUN apt-get -q update \
    && apt-get -q --yes install libpcre3 libpcre3-dev nodejs nodejs-legacy npm libmysqlclient-dev mysql-client \
                                libfontconfig1 \
    && apt-get clean

WORKDIR /app

# The general app requirements and packages required to run Tox are installed into the system,
# so we need to include them as part of the Docker build.
# TODO: edit this comment
COPY ./ /app/
# install the requirements into the container first
# these rarely change and is more cache friendly
# ... really speeds up building new containers
RUN pip install -r requirements.txt
RUN pip install -r requirements-tox.txt

# Using /bin/bash as the entrypoint works around some volume mount issues on Windows
# where volume-mounted files do not have execute bits set.
# https://github.com/docker/compose/issues/2301#issuecomment-154450785 has additional background.
ENTRYPOINT ["/bin/bash", "/app/scripts/run.sh"]
CMD ["public"]
